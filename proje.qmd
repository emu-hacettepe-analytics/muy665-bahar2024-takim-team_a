---
title: "Proje X (proje adını yazınız)"
number-sections: true
---

**Proje sayfamıza hoş geldiniz.**

*Projemizle ilgili güncellemelerden haberdar olmak için bu alanı takip edin.*

(Aşağıdaki başlıklar örnek olarak verilmiştir; lütfen gerektiği şekilde düzenlemekten çekinmeyin.)

# Proje Genel Bakış ve Kapsamı

xxxxxx

# Veri

xxxxxx

## Veri Kaynağı

xxxxxx

## Veri Hakkında Genel Bilgiler

xxxxxx

## Tercih Sebebi

xxxxxx

## Ön İşleme

xxxxxx

# Analiz

```{r}

library(readxl)
library(dplyr)
library(ggplot2)
library(tidyr)




data <- read_excel("../muy665-bahar2024-takim-team_a/veri1.xls")  



head(data)

# Print the data to check the columns
print(data)

# Extract specific rows and columns
# Extract years from the 4th row (columns 4 to 9 for years 2017 to 2022)
years <- as.numeric(data[3, 2:8])

# Extract total from 5th row (columns 4 to 9 for years 2017 to 2022)
total <- as.numeric(data[4, 2:8])

# Extract male from 6th row (columns 4 to 9 for years 2017 to 2022)
male <- as.numeric(data[5, 2:8])

# Extract female from 7th row (columns 4 to 9 for years 2017 to 2022)
female <- as.numeric(data[6, 2:8])

# Combine data into a data frame
plot_data <- data.frame(
  year = rep(years, 3),
  score = c(total, male, female),
  group = rep(c("Total", "Male", "Female"), each = length(years))
)

# Print the combined data to verify
print(plot_data)


# Create histograms for each year and each group
ggplot(plot_data, aes(x = score, fill = group)) +
  geom_histogram(binwidth = 0.1, position = "dodge") +
  facet_wrap(~ year) +
  labs(
    title = "Scores Distribution by Year and Group",
    x = "Score",
    y = "Frequency",
    fill = "Group"
  ) +
  theme_minimal()

#yenisi ve en iyisi burada cinsiyete göre gittik
# Combine data into a data frame
plot_data <- data.frame(
  year = rep(years, 3),
  score = c(total, male, female),
  group = rep(c("Total", "Male", "Female"), each = length(years))
)

# Print the combined data to verify
print(plot_data)

# Visualize data separated by years with x-axis as total, male, and female, and y-axis as percentage
ggplot(plot_data, aes(x = group, y = score, fill = group)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_wrap(~ year) +
  labs(
    title = "Scores by Year and Group",
    x = "Group",
    y = "Score",
    fill = "Group"
  ) +
  theme_minimal()

# Show trends for total, male, and female scores over the years
ggplot(plot_data, aes(x = year, y = score, color = group)) +
  geom_line() +
  geom_point() +
  labs(
    title = "Trend of Scores Over Years",
    x = "Year",
    y = "Score",
    color = "Group"
  ) +
  theme_minimal()

# Predict the values for the year 2024 using linear regression
lm_total <- lm(score ~ year, data = plot_data %>% filter(group == "Total"))
lm_male <- lm(score ~ year, data = plot_data %>% filter(group == "Male"))
lm_female <- lm(score ~ year, data = plot_data %>% filter(group == "Female"))

pred_2024 <- data.frame(
  year = 2024,
  group = c("Total", "Male", "Female"),
  score = c(predict(lm_total, newdata = data.frame(year = 2024)),
            predict(lm_male, newdata = data.frame(year = 2024)),
            predict(lm_female, newdata = data.frame(year = 2024)))
)

# Print the predicted values for 2024
print(pred_2024)

# Add predictions to the plot data
plot_data <- rbind(plot_data, pred_2024)

# Show trends including predictions for 2024
ggplot(plot_data, aes(x = year, y = score, color = group)) +
  geom_line() +
  geom_point() +
  labs(
    title = "Trend of Scores Over Years (Including 2024 Prediction)",
    x = "Year",
    y = "Score",
    color = "Group"
  ) +
  theme_minimal()



#yaşlar için age grouping

# Extract total from 5th row (columns 4 to 9 for years 2017 to 2022)
eighteen_twentyfour <- as.numeric(data[8, 2:8])

# Extract male from 6th row (columns 4 to 9 for years 2017 to 2022)
twentyfour_thirtyfour <- as.numeric(data[9, 2:8])

# Extract female from 7th row (columns 4 to 9 for years 2017 to 2022)
thirtyfive_fourtyfour <- as.numeric(data[10, 2:8])

# Extract female from 7th row (columns 4 to 9 for years 2017 to 2022)
fourtyfive_fiftyfour <- as.numeric(data[11, 2:8])

# Extract female from 7th row (columns 4 to 9 for years 2017 to 2022)
fiftyfive_sixtyfour <- as.numeric(data[12, 2:8])

# Extract female from 7th row (columns 4 to 9 for years 2017 to 2022)
sixtyfive_plus <- as.numeric(data[13, 2:8])

# Combine data into a data frame
plot_data <- data.frame(
  year = rep(years, 6),
  score = c(eighteen_twentyfour, twentyfour_thirtyfour, thirtyfive_fourtyfour, fourtyfive_fiftyfour, fiftyfive_sixtyfour, sixtyfive_plus),
  group = rep(c("eighteen_twentyfour", "twentyfour_thirtyfour", "thirtyfive_fourtyfour", "fourtyfive_fiftyfour", "fiftyfive_sixtyfour", "sixtyfive_plus"), each = length(years))
)

# Print the combined data to verify
print(plot_data)


# Visualize data separated by years with x-axis as total, male, and female, and y-axis as percentage
ggplot(plot_data, aes(x = group, y = score, fill = group)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_wrap(~ year) +
  labs(
    title = "Scores by Year and Group",
    x = "Group",
    y = "Score",
    fill = "Group"
  ) +
  theme_minimal()

# Show trends for total, male, and female scores over the years
ggplot(plot_data, aes(x = year, y = score, color = group)) +
  geom_line() +
  geom_point() +
  labs(
    title = "Trend of Scores Over Years",
    x = "Year",
    y = "Score",
    color = "Group"
  ) +
  theme_minimal()

# yeni veriseti mutluluk kaynağı değeri olanlar
# yeni veriseti mutluluk kaynağı değeri olanlar
# yeni veriseti mutluluk kaynağı değeri olanlar
data1 <- read_excel("../muy665-bahar2024-takim-team_a/veri2.xls")  

head(data1)

# Print the data to check the columns
print(data1)

# Extract years from the 4th row (columns 4 to 9 for years 2017 to 2022)
years1 <- as.numeric(data1[3, 3:13])

# Extract total from 5th row (columns 4 to 9 for years 2017 to 2022)
saglık <- as.numeric(data1[13, 3:13])

# Extract male from 6th row (columns 4 to 9 for years 2017 to 2022)
sevgi <- as.numeric(data1[14, 3:13])

# Extract female from 7th row (columns 4 to 9 for years 2017 to 2022)
basarı <- as.numeric(data1[15, 3:13])

# Extract total from 5th row (columns 4 to 9 for years 2017 to 2022)
para <- as.numeric(data1[16, 3:13])

# Extract male from 6th row (columns 4 to 9 for years 2017 to 2022)
is <- as.numeric(data1[17, 3:13])

# Extract female from 7th row (columns 4 to 9 for years 2017 to 2022)
diger <- as.numeric(data1[18, 3:13])

print(years1)


# Extract years for years 2013 to 2023
years1 <- as.numeric(data1[3, 3:13])

# Extract health for years 2013 to 2023
saglik <- as.numeric(data1[13, 3:13])

# Extract love for years 2013 to 2023
sevgi <- as.numeric(data1[14, 3:13])

# Extract success for years 2013 to 2023
basari <- as.numeric(data1[15, 3:13])

# Extract money for years 2013 to 2023
para <- as.numeric(data1[16, 3:13])

# Extract job for years 2013 to 2023
is <- as.numeric(data1[17, 3:13])

# Extract other for years 2013 to 2023
diger <- as.numeric(data1[18, 3:13])


#yeni kısım
# Create a long-format data frame
plot_data <- data.frame(
  year = rep(years1, 6),
  topic = rep(c("Health", "Love", "Success", "Money", "Job", "Other"), each = length(years1)),
  value = c(saglik, sevgi, basari, para, is, diger)
)

# Print the combined data to verify
print(plot_data)

# Function to create pie chart for a specific year with percentage labels
create_pie_chart <- function(year_data) {
  year_data <- year_data %>%
    mutate(percentage = value / sum(value) * 100) %>%
    mutate(label = paste0(topic, ": ", round(percentage, 1), "%"))
  
  ggplot(year_data, aes(x = "", y = value, fill = topic)) +
    geom_bar(stat = "identity", width = 1) +
    coord_polar(theta = "y") +
    labs(title = paste("Distribution of Topics in", unique(year_data$year)),
         x = NULL, y = NULL, fill = "Topic") +
    theme_void() +
    theme(legend.position = "bottom") +
    geom_text(aes(label = label), position = position_stack(vjust = 0.5))
}

# Loop through each year and create pie charts
for (year in unique(plot_data$year)) {
  year_data <- plot_data %>% filter(year == !!year)
  pie_chart <- create_pie_chart(year_data)
  print(pie_chart)
}

# Show line plots for each topic to visualize changes over the years
ggplot(plot_data, aes(x = year, y = value, color = topic)) +
  geom_line() +
  geom_point() +
  labs(
    title = "Trends of Topics Over Years",
    x = "Year",
    y = "Value",
    color = "Topic"
  ) +
  theme_minimal()
#düzenlenmiş hali


# Print the combined data to verify
print(plot_data)

# Function to create pie chart for a specific year with percentage labels
create_pie_chart <- function(year_data) {
  year_data <- year_data %>%
    mutate(percentage = value / sum(value) * 100) %>%
    mutate(label = paste0(topic, ": ", round(percentage, 1), "%"))
  
  ggplot(year_data, aes(x = "", y = value, fill = topic)) +
    geom_bar(stat = "identity", width = 1) +
    coord_polar(theta = "y") +
    labs(title = paste("Distribution of Topics in", unique(year_data$year)),
         x = NULL, y = NULL, fill = "Topic") +
    theme_void() +
    theme(legend.position = "bottom") +
    geom_text(aes(label = label), position = position_stack(vjust = 0.5), size = 3) +
    guides(fill = guide_legend(ncol = 2))
}

# Loop through each year and create pie charts
for (year in unique(plot_data$year)) {
  year_data <- plot_data %>% filter(year == !!year)
  pie_chart <- create_pie_chart(year_data)
  print(pie_chart)
}

# Show line plots for each topic to visualize changes over the years
ggplot(plot_data, aes(x = year, y = value, color = topic)) +
  geom_line() +
  geom_point() +
  scale_x_continuous(breaks = years1) +  # Ensure x-axis shows only whole years
  labs(
    title = "Trends of Topics Over Years",
    x = "Year",
    y = "Value",
    color = "Topic"
  ) +
  theme_minimal()

# Veri kısmı
# veri

```

## Keşifsel Veri Analizi

xxxxxx

## Trend Analizi

xxxxxx

## Model Uydurma

xxxxxx

## Sonuçlar

xxxxxx

# Sonuçlar ve Ana Çıkarımlar

xxxxxx
